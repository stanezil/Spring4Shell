name: Aqua
on:
  push:
    branches:
      - main
env:
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry
  AQUA_TOKEN: ${{ secrets.AQUA_TOKEN }} # Aqua Scanner authentication
  AQUA_HOST: ${{ secrets.AQUA_HOST }} # Aqua Scanner authentication
  BUILD_NUMBER: ${{ github.run_id }}
  BUILD_NAME: ${{ github.repository }}
  GITHUB_WORKSPACE: ${{ github.workspace }}
  IMAGE_NAME: "stanhoe/spring4shell:github"
  
  
jobs:
  aqua:
    name: Use Aqua Supply Chain Security Scanner Trivy to scan the repo 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          security-checks: 'vuln,config,secret'
          hide-progress: false
          format: 'table'
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
          CSPM_URL: https://asia-1.api.cloudsploit.com
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build -t $IMAGE_NAME .
    
    - name: Aqua Scanner
      run: |
        docker login registry.aquasec.com -u $AQUA_USER -p $AQUA_PASSWORD
        docker pull registry.aquasec.com/scanner:2022.4
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:2022.4 scan --local $IMAGE_NAME --host $AQUA_HOST --token $AQUA_TOKEN --show-negligible
 
    - name: Push the Docker image to docker repo
      run: |   
        docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
        docker push $IMAGE_NAME  
       
    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
        
    - name: Manifest Generation
      run: |
        export BILLY_SERVER=https://billy.asia-1.codesec.aquasec.com
        curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
        curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
        if ! cat install.sh.checksum | sha256sum ; then
        echo "install.sh checksum failed"
        exit 1
        fi
        BINDIR="." sh install.sh
        rm install.sh install.sh.checksum
        ./billy generate \
          --access-token "${{ secrets.GITHUB_TOKEN }}" \
          --aqua-key "${{ secrets.AQUA_KEY }}" \
          --aqua-secret "${{ secrets.AQUA_SECRET }}" \
          --cspm-url https://asia-1.api.cloudsploit.com \
          --artifact-path "stanhoe/spring4shell:$GITHUB_SHA" 

          # The docker image name:tag of the newly built image
          # --artifact-path "my-image-name:${{ env.tag-version }}" 
          # OR the path to the root folder of your project. I.e my-repo/my-app 
          # --artifact-path "${{env.MY_APP_ROOT}}"
          
